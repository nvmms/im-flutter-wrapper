plugins {
    id "com.android.application"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// def flutterRoot = localProperties.getProperty('flutter.sdk')
// if (flutterRoot == null) {
//     throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
// }

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// apply plugin: 'com.android.application'
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "cn.rongcloud.im.wrapper.flutter.example"
    compileSdkVersion 35

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "cn.rongcloud.im.wrapper.flutter.example"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // 添加 IM 支持架构
        ndk {
            abiFilters "armeabi-v7a", 'arm64-v8a', 'x86', 'x86_64'
        }

    }

    signingConfigs {
        release {
            storeFile file("../FlutterWrapperDemo.jks")
            storePassword '123456'
            keyAlias 'key'
            keyPassword '123456'
        }

        debug {
            storeFile file("../FlutterWrapperDemo.jks")
            storePassword '123456'
            keyAlias 'key'
            keyPassword '123456'
        }
    }


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            // 禁用混淆 否则会找不到 im so 文件
            minifyEnabled false
            shrinkResources false
        }
    }


}

flutter {
    source '../..'
}

dependencies {

    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'cn.rongcloud.sdk:im_libcore:5.3.1.1'
    implementation 'cn.rongcloud.sdk:im_chatroom:5.3.1.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    // implementation 'com.meizu.flyme.internet:push-internal:3.6.+@aar'
    // huawei
    implementation 'com.huawei.hms:push:5.3.0.301'
    // 小米
//    implementation files('libs/MiPush_SDK_Client_4_9_1.jar')
    // meizu
//    implementation files('libs/vivo_pushSDK_v3.0.0.4_484.aar')
    // vivo

    // oppo
//    implementation(name: 'push-3.0.0', ext: 'aar')
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'commons-codec:commons-codec:1.6'
    implementation 'androidx.annotation:annotation:1.1.0'
}

apply plugin: 'com.huawei.agconnect'
